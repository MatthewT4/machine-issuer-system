version: '3.7'
services:
  postgres:
    build:
      context: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "35432:5432"
    healthcheck:
      test: "pg_isready -p 5432 -h 127.0.0.1"
    networks:
      - app-network


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - app-network


  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - app-network


  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "80:80"
    depends_on:
      - postgres
    networks:
      - app-network


  frontend:
    build:
      context: ./../kafedra
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "4200:4200"
    networks:
      - app-network


  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "5000:5000"
    depends_on:
      - backend
      - frontend
    networks:
      - app-network


networks:
  app-network:
    driver: bridge